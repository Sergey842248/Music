// Generated by view binder compiler. Do not edit!
package code.name.monkey.retromusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import code.name.monkey.retromusic.R;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemActionButtonReorderableBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialTextView buttonName;

  @NonNull
  public final MaterialCheckBox checkboxVisibility;

  @NonNull
  public final AppCompatImageView dragHandle;

  private ListItemActionButtonReorderableBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialTextView buttonName, @NonNull MaterialCheckBox checkboxVisibility,
      @NonNull AppCompatImageView dragHandle) {
    this.rootView = rootView;
    this.buttonName = buttonName;
    this.checkboxVisibility = checkboxVisibility;
    this.dragHandle = dragHandle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemActionButtonReorderableBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemActionButtonReorderableBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_action_button_reorderable, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemActionButtonReorderableBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_name;
      MaterialTextView buttonName = ViewBindings.findChildViewById(rootView, id);
      if (buttonName == null) {
        break missingId;
      }

      id = R.id.checkbox_visibility;
      MaterialCheckBox checkboxVisibility = ViewBindings.findChildViewById(rootView, id);
      if (checkboxVisibility == null) {
        break missingId;
      }

      id = R.id.drag_handle;
      AppCompatImageView dragHandle = ViewBindings.findChildViewById(rootView, id);
      if (dragHandle == null) {
        break missingId;
      }

      return new ListItemActionButtonReorderableBinding((ConstraintLayout) rootView, buttonName,
          checkboxVisibility, dragHandle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
