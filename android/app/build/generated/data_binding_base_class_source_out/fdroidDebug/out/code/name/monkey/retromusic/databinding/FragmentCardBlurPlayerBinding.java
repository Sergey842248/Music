// Generated by view binder compiler. Do not edit!
package code.name.monkey.retromusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import code.name.monkey.retromusic.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCardBlurPlayerBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FrameLayout cardContainer;

  @NonNull
  public final AppCompatImageView colorBackground;

  @NonNull
  public final FragmentContainerView coverLyrics;

  @NonNull
  public final View mask;

  @NonNull
  public final FragmentContainerView playbackControlsFragment;

  @NonNull
  public final FragmentContainerView playerAlbumCoverFragment;

  @NonNull
  public final MaterialToolbar playerToolbar;

  @NonNull
  public final MaterialTextView text;

  @NonNull
  public final MaterialTextView title;

  private FragmentCardBlurPlayerBinding(@NonNull FrameLayout rootView,
      @NonNull FrameLayout cardContainer, @NonNull AppCompatImageView colorBackground,
      @NonNull FragmentContainerView coverLyrics, @NonNull View mask,
      @NonNull FragmentContainerView playbackControlsFragment,
      @NonNull FragmentContainerView playerAlbumCoverFragment,
      @NonNull MaterialToolbar playerToolbar, @NonNull MaterialTextView text,
      @NonNull MaterialTextView title) {
    this.rootView = rootView;
    this.cardContainer = cardContainer;
    this.colorBackground = colorBackground;
    this.coverLyrics = coverLyrics;
    this.mask = mask;
    this.playbackControlsFragment = playbackControlsFragment;
    this.playerAlbumCoverFragment = playerAlbumCoverFragment;
    this.playerToolbar = playerToolbar;
    this.text = text;
    this.title = title;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCardBlurPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCardBlurPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_card_blur_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCardBlurPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardContainer;
      FrameLayout cardContainer = ViewBindings.findChildViewById(rootView, id);
      if (cardContainer == null) {
        break missingId;
      }

      id = R.id.colorBackground;
      AppCompatImageView colorBackground = ViewBindings.findChildViewById(rootView, id);
      if (colorBackground == null) {
        break missingId;
      }

      id = R.id.cover_lyrics;
      FragmentContainerView coverLyrics = ViewBindings.findChildViewById(rootView, id);
      if (coverLyrics == null) {
        break missingId;
      }

      id = R.id.mask;
      View mask = ViewBindings.findChildViewById(rootView, id);
      if (mask == null) {
        break missingId;
      }

      id = R.id.playbackControlsFragment;
      FragmentContainerView playbackControlsFragment = ViewBindings.findChildViewById(rootView, id);
      if (playbackControlsFragment == null) {
        break missingId;
      }

      id = R.id.playerAlbumCoverFragment;
      FragmentContainerView playerAlbumCoverFragment = ViewBindings.findChildViewById(rootView, id);
      if (playerAlbumCoverFragment == null) {
        break missingId;
      }

      id = R.id.playerToolbar;
      MaterialToolbar playerToolbar = ViewBindings.findChildViewById(rootView, id);
      if (playerToolbar == null) {
        break missingId;
      }

      id = R.id.text;
      MaterialTextView text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }

      id = R.id.title;
      MaterialTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new FragmentCardBlurPlayerBinding((FrameLayout) rootView, cardContainer,
          colorBackground, coverLyrics, mask, playbackControlsFragment, playerAlbumCoverFragment,
          playerToolbar, text, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
