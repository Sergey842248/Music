// Generated by view binder compiler. Do not edit!
package code.name.monkey.retromusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import code.name.monkey.retromusic.R;
import code.name.monkey.retromusic.views.HomeImageLayout;
import code.name.monkey.retromusic.views.TopAppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TopAppBarLayout appBarLayout;

  @NonNull
  public final NestedScrollView container;

  @NonNull
  public final ConstraintLayout contentContainer;

  @NonNull
  public final HomeContentBinding homeContent;

  @NonNull
  public final HomeImageLayout imageLayout;

  private FragmentHomeBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TopAppBarLayout appBarLayout, @NonNull NestedScrollView container,
      @NonNull ConstraintLayout contentContainer, @NonNull HomeContentBinding homeContent,
      @NonNull HomeImageLayout imageLayout) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.container = container;
    this.contentContainer = contentContainer;
    this.homeContent = homeContent;
    this.imageLayout = imageLayout;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      TopAppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.container;
      NestedScrollView container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.contentContainer;
      ConstraintLayout contentContainer = ViewBindings.findChildViewById(rootView, id);
      if (contentContainer == null) {
        break missingId;
      }

      id = R.id.home_content;
      View homeContent = ViewBindings.findChildViewById(rootView, id);
      if (homeContent == null) {
        break missingId;
      }
      HomeContentBinding binding_homeContent = HomeContentBinding.bind(homeContent);

      id = R.id.imageLayout;
      HomeImageLayout imageLayout = ViewBindings.findChildViewById(rootView, id);
      if (imageLayout == null) {
        break missingId;
      }

      return new FragmentHomeBinding((CoordinatorLayout) rootView, appBarLayout, container,
          contentContainer, binding_homeContent, imageLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
