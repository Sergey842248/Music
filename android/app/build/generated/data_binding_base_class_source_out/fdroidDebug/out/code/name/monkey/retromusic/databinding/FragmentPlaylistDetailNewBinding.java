// Generated by view binder compiler. Do not edit!
package code.name.monkey.retromusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import code.name.monkey.retromusic.R;
import code.name.monkey.retromusic.views.insets.InsetsRecyclerView;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPlaylistDetailNewBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final AppCompatImageView clearSearch;

  @NonNull
  public final CollapsingToolbarLayout collapsingAppBarLayout;

  @NonNull
  public final CoordinatorLayout container;

  @NonNull
  public final LinearLayout empty;

  @NonNull
  public final MaterialTextView emptyText;

  @NonNull
  public final ShapeableImageView image;

  @NonNull
  public final MaterialButton playButton;

  @NonNull
  public final TextInputEditText playlistSearchView;

  @NonNull
  public final CircularProgressIndicator progressIndicator;

  @NonNull
  public final InsetsRecyclerView recyclerView;

  @NonNull
  public final MaterialButton shuffleButton;

  @NonNull
  public final TextView subtitle;

  @NonNull
  public final TextView title;

  @NonNull
  public final MaterialToolbar toolbar;

  private FragmentPlaylistDetailNewBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull AppCompatImageView clearSearch,
      @NonNull CollapsingToolbarLayout collapsingAppBarLayout, @NonNull CoordinatorLayout container,
      @NonNull LinearLayout empty, @NonNull MaterialTextView emptyText,
      @NonNull ShapeableImageView image, @NonNull MaterialButton playButton,
      @NonNull TextInputEditText playlistSearchView,
      @NonNull CircularProgressIndicator progressIndicator,
      @NonNull InsetsRecyclerView recyclerView, @NonNull MaterialButton shuffleButton,
      @NonNull TextView subtitle, @NonNull TextView title, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.clearSearch = clearSearch;
    this.collapsingAppBarLayout = collapsingAppBarLayout;
    this.container = container;
    this.empty = empty;
    this.emptyText = emptyText;
    this.image = image;
    this.playButton = playButton;
    this.playlistSearchView = playlistSearchView;
    this.progressIndicator = progressIndicator;
    this.recyclerView = recyclerView;
    this.shuffleButton = shuffleButton;
    this.subtitle = subtitle;
    this.title = title;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPlaylistDetailNewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPlaylistDetailNewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_playlist_detail_new, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPlaylistDetailNewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.clear_search;
      AppCompatImageView clearSearch = ViewBindings.findChildViewById(rootView, id);
      if (clearSearch == null) {
        break missingId;
      }

      id = R.id.collapsingAppBarLayout;
      CollapsingToolbarLayout collapsingAppBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (collapsingAppBarLayout == null) {
        break missingId;
      }

      CoordinatorLayout container = (CoordinatorLayout) rootView;

      id = android.R.id.empty;
      LinearLayout empty = ViewBindings.findChildViewById(rootView, id);
      if (empty == null) {
        break missingId;
      }

      id = R.id.emptyText;
      MaterialTextView emptyText = ViewBindings.findChildViewById(rootView, id);
      if (emptyText == null) {
        break missingId;
      }

      id = R.id.image;
      ShapeableImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.play_button;
      MaterialButton playButton = ViewBindings.findChildViewById(rootView, id);
      if (playButton == null) {
        break missingId;
      }

      id = R.id.playlistSearchView;
      TextInputEditText playlistSearchView = ViewBindings.findChildViewById(rootView, id);
      if (playlistSearchView == null) {
        break missingId;
      }

      id = R.id.progressIndicator;
      CircularProgressIndicator progressIndicator = ViewBindings.findChildViewById(rootView, id);
      if (progressIndicator == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      InsetsRecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.shuffle_button;
      MaterialButton shuffleButton = ViewBindings.findChildViewById(rootView, id);
      if (shuffleButton == null) {
        break missingId;
      }

      id = R.id.subtitle;
      TextView subtitle = ViewBindings.findChildViewById(rootView, id);
      if (subtitle == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentPlaylistDetailNewBinding((CoordinatorLayout) rootView, appBarLayout,
          clearSearch, collapsingAppBarLayout, container, empty, emptyText, image, playButton,
          playlistSearchView, progressIndicator, recyclerView, shuffleButton, subtitle, title,
          toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
