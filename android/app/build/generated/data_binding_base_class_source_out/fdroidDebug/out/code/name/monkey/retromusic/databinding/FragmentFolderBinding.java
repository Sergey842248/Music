// Generated by view binder compiler. Do not edit!
package code.name.monkey.retromusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import code.name.monkey.retromusic.R;
import code.name.monkey.retromusic.views.BreadCrumbLayout;
import code.name.monkey.retromusic.views.TopAppBarLayout;
import code.name.monkey.retromusic.views.insets.InsetsRecyclerView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFolderBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TopAppBarLayout appBarLayout;

  @NonNull
  public final BreadCrumbLayout breadCrumbs;

  @NonNull
  public final LinearLayout empty;

  @NonNull
  public final MaterialTextView emptyText;

  @NonNull
  public final InsetsRecyclerView recyclerView;

  private FragmentFolderBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TopAppBarLayout appBarLayout, @NonNull BreadCrumbLayout breadCrumbs,
      @NonNull LinearLayout empty, @NonNull MaterialTextView emptyText,
      @NonNull InsetsRecyclerView recyclerView) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.breadCrumbs = breadCrumbs;
    this.empty = empty;
    this.emptyText = emptyText;
    this.recyclerView = recyclerView;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFolderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFolderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_folder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFolderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      TopAppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.breadCrumbs;
      BreadCrumbLayout breadCrumbs = ViewBindings.findChildViewById(rootView, id);
      if (breadCrumbs == null) {
        break missingId;
      }

      id = android.R.id.empty;
      LinearLayout empty = ViewBindings.findChildViewById(rootView, id);
      if (empty == null) {
        break missingId;
      }

      id = R.id.emptyText;
      MaterialTextView emptyText = ViewBindings.findChildViewById(rootView, id);
      if (emptyText == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      InsetsRecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      return new FragmentFolderBinding((CoordinatorLayout) rootView, appBarLayout, breadCrumbs,
          empty, emptyText, recyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
