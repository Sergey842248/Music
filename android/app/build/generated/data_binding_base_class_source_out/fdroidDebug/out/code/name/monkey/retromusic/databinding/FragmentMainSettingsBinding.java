// Generated by view binder compiler. Do not edit!
package code.name.monkey.retromusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import code.name.monkey.retromusic.R;
import code.name.monkey.retromusic.views.SettingListItemView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMainSettingsBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final SettingListItemView aboutSettings;

  @NonNull
  public final SettingListItemView audioSettings;

  @NonNull
  public final SettingListItemView backupRestoreSettings;

  @NonNull
  public final LinearLayout container;

  @NonNull
  public final SettingListItemView generalSettings;

  @NonNull
  public final SettingListItemView imageSettings;

  @NonNull
  public final SettingListItemView notificationSettings;

  @NonNull
  public final SettingListItemView nowPlayingSettings;

  @NonNull
  public final SettingListItemView otherSettings;

  @NonNull
  public final SettingListItemView personalizeSettings;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final SearchView searchView;

  private FragmentMainSettingsBinding(@NonNull NestedScrollView rootView,
      @NonNull SettingListItemView aboutSettings, @NonNull SettingListItemView audioSettings,
      @NonNull SettingListItemView backupRestoreSettings, @NonNull LinearLayout container,
      @NonNull SettingListItemView generalSettings, @NonNull SettingListItemView imageSettings,
      @NonNull SettingListItemView notificationSettings,
      @NonNull SettingListItemView nowPlayingSettings, @NonNull SettingListItemView otherSettings,
      @NonNull SettingListItemView personalizeSettings, @NonNull NestedScrollView scrollView,
      @NonNull SearchView searchView) {
    this.rootView = rootView;
    this.aboutSettings = aboutSettings;
    this.audioSettings = audioSettings;
    this.backupRestoreSettings = backupRestoreSettings;
    this.container = container;
    this.generalSettings = generalSettings;
    this.imageSettings = imageSettings;
    this.notificationSettings = notificationSettings;
    this.nowPlayingSettings = nowPlayingSettings;
    this.otherSettings = otherSettings;
    this.personalizeSettings = personalizeSettings;
    this.scrollView = scrollView;
    this.searchView = searchView;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMainSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMainSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_main_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMainSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aboutSettings;
      SettingListItemView aboutSettings = ViewBindings.findChildViewById(rootView, id);
      if (aboutSettings == null) {
        break missingId;
      }

      id = R.id.audioSettings;
      SettingListItemView audioSettings = ViewBindings.findChildViewById(rootView, id);
      if (audioSettings == null) {
        break missingId;
      }

      id = R.id.backup_restore_settings;
      SettingListItemView backupRestoreSettings = ViewBindings.findChildViewById(rootView, id);
      if (backupRestoreSettings == null) {
        break missingId;
      }

      id = R.id.container;
      LinearLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.generalSettings;
      SettingListItemView generalSettings = ViewBindings.findChildViewById(rootView, id);
      if (generalSettings == null) {
        break missingId;
      }

      id = R.id.imageSettings;
      SettingListItemView imageSettings = ViewBindings.findChildViewById(rootView, id);
      if (imageSettings == null) {
        break missingId;
      }

      id = R.id.notificationSettings;
      SettingListItemView notificationSettings = ViewBindings.findChildViewById(rootView, id);
      if (notificationSettings == null) {
        break missingId;
      }

      id = R.id.nowPlayingSettings;
      SettingListItemView nowPlayingSettings = ViewBindings.findChildViewById(rootView, id);
      if (nowPlayingSettings == null) {
        break missingId;
      }

      id = R.id.otherSettings;
      SettingListItemView otherSettings = ViewBindings.findChildViewById(rootView, id);
      if (otherSettings == null) {
        break missingId;
      }

      id = R.id.personalizeSettings;
      SettingListItemView personalizeSettings = ViewBindings.findChildViewById(rootView, id);
      if (personalizeSettings == null) {
        break missingId;
      }

      NestedScrollView scrollView = (NestedScrollView) rootView;

      id = R.id.search_view;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      return new FragmentMainSettingsBinding((NestedScrollView) rootView, aboutSettings,
          audioSettings, backupRestoreSettings, container, generalSettings, imageSettings,
          notificationSettings, nowPlayingSettings, otherSettings, personalizeSettings, scrollView,
          searchView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
